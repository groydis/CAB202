#ifndef BITMAPS_H_
#define BITMAPS_H_

#define bombWidthPixels 7
#define bombHeightPixels 7

#define bowarrowWidthPixels 7
#define bowarrowHeightPixels 7

#define doorWidthPixels 12
#define doorHeightPixels 11

#define keyWidthPixels 7
#define keyHeightPixels 3

#define monsterWidthPixels 5
#define monsterHeightPixels 6

#define playerWidthPixels 7
#define playerHeightPixels 11

#define shieldWidthPixels 7
#define shieldHeightPixels 7

#define treasureWidthPixels 7
#define treasureHeightPixels 7

#define towerWidthPixels 80
#define towerHeightPixels 35

#define levelOneDoorWidthPixels 14
#define levelOneDoorHeightPixels 13

#define wall_l_rWidthPixels 2
#define wall_l_rHeightPixels 120

#define wall_t_bWidthPixels 126
#define wall_t_bHeightPixels 2

unsigned char bombBitmaps[] =
{
	0b00010000, //    #   
	0b00111000, //   ###  
	0b01100100, //  ##  # 
	0b11110010, // ####  #
	0b11111010, // ##### #
	0b01111100, //  ##### 
	0b00111000, //   ###  
};


unsigned char bowarrowBitmaps[] =
{
	0b00110000, //   ##   
	0b01010000, //  # #   
	0b10010010, // #  #  #
	0b11111100, // ###### 
	0b10010010, // #  #  #
	0b01010000, //  # #   
	0b00110000, //   ##   
};


unsigned char doorBitmaps[] =
{
	0b00001111, 0b00000000, //     ####    
	0b00111111, 0b11000000, //   ########  
	0b01110000, 0b11100000, //  ###    ### 
	0b01000000, 0b00100000, //  #        # 
	0b11000000, 0b00110000, // ##        ##
	0b11000000, 0b00110000, // ##        ##
	0b11000001, 0b10110000, // ##     ## ##
	0b11000001, 0b10110000, // ##     ## ##
	0b11000000, 0b00110000, // ##        ##
	0b11000000, 0b00110000, // ##        ##
	0b11000000, 0b00110000, // ##        ##
};


unsigned char keyBitmaps[] =
{
	0b11100000, // ###    
	0b10111110, // # #####
	0b11101010, // ### # #
};


unsigned char monsterBitmaps[] =
{
	0b01110000, //  ### 
	0b11111000, // #####
	0b10101000, // # # #
	0b11111000, // #####
	0b11111000, // #####
	0b10101000, // # # #
};


unsigned char playerBitmaps[] =
{
	0b00101000, //   # #  
	0b00111000, //   ###  
	0b00101000, //   # #  
	0b00111000, //   ###  
	0b00000000, //        
	0b11111110, // #######
	0b10101010, // # # # #
	0b10111010, // # ### #
	0b00101000, //   # #  
	0b00101000, //   # #  
	0b00101000, //   # #  
};


unsigned char shieldBitmaps[] =
{
	0b01111100, //  ##### 
	0b11111110, // #######
	0b11101110, // ### ###
	0b11111110, // #######
	0b01111100, //  ##### 
	0b01111100, //  ##### 
	0b00111000, //   ###  
};

unsigned char treasureBitmaps[] =
{
	0b00101000, //   # #  
	0b11111110, // #######
	0b10101000, // # # #  
	0b11111110, // #######
	0b00101010, //   # # #
	0b11111110, // #######
	0b00101000, //   # #  
};

unsigned char towerBitmaps[] =
{
	0b11000000, 0b00100000, 0b00100000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00110011, // ##        #       #                                                       ##  ##
	0b11000000, 0b11001111, 0b11110000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00111000, 0b00010011, // ##      ##  ########                                              ###      #  ##
	0b11000000, 0b11110000, 0b00011100, 0b01111000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001111, 0b00010011, // ##      ####       ###   ####                                       ####   #  ##
	0b11000001, 0b10000000, 0b00000111, 0b11001111, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b10000011, // ##     ##            #####  ####                                       ##     ##
	0b11000001, 0b00000001, 0b10000000, 0b00000110, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b10000001, 0b10100011, // ##     #       ##            ##                                ##      ## #   ##
	0b11000001, 0b00000111, 0b11100000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000111, 0b11100001, 0b00011111, // ##     #     ######                                          ######    #   #####
	0b11000011, 0b00001111, 0b11110000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001111, 0b11110001, 0b00000111, // ##    ##    ########                                        ########   #     ###
	0b11000000, 0b00001111, 0b11110000, 0b00011000, 0b00000000, 0b00000000, 0b00011000, 0b00001111, 0b11110001, 0b00000011, // ##          ########       ##                      ##       ########   #      ##
	0b11000000, 0b00001111, 0b11110000, 0b01111110, 0b00000001, 0b10000000, 0b01111110, 0b00001111, 0b11110000, 0b10000011, // ##          ########     ######        ##        ######     ########    #     ##
	0b11000000, 0b00001111, 0b11110000, 0b11111111, 0b00000111, 0b11100000, 0b11111111, 0b00001111, 0b11110000, 0b10000011, // ##          ########    ########     ######     ########    ########    #     ##
	0b11000000, 0b00001111, 0b11110000, 0b11111111, 0b00001111, 0b11110000, 0b11111111, 0b00001111, 0b11110000, 0b01000011, // ##          ########    ########    ########    ########    ########     #    ##
	0b11000000, 0b00001111, 0b11110000, 0b11111111, 0b00001111, 0b11110000, 0b11111111, 0b00001111, 0b11110000, 0b01000011, // ##          ########    ########    ########    ########    ########     #    ##
	0b11000000, 0b00000011, 0b10110000, 0b11111111, 0b00001111, 0b11110000, 0b11111111, 0b00001101, 0b11000000, 0b01100011, // ##            ### ##    ########    ########    ########    ## ###       ##   ##
	0b11000001, 0b00000000, 0b00000000, 0b11111111, 0b00001111, 0b11110000, 0b11111111, 0b00000000, 0b00000000, 0b00100011, // ##     #                ########    ########    ########                  #   ##
	0b11000001, 0b10000000, 0b00000000, 0b11111111, 0b00001111, 0b11110000, 0b11111111, 0b00000000, 0b00000000, 0b00100011, // ##     ##               ########    ########    ########                  #   ##
	0b11000000, 0b11000000, 0b00000000, 0b00111011, 0b00001111, 0b11110000, 0b11011100, 0b00000000, 0b00000100, 0b00100011, // ##      ##                ### ##    ########    ## ###               #    #   ##
	0b11000001, 0b11110000, 0b00000000, 0b00000000, 0b00001101, 0b10110000, 0b00000000, 0b00001000, 0b00111100, 0b00000011, // ##     #####                        ## ## ##                #     ####        ##
	0b11000001, 0b00000000, 0b00110000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001000, 0b01100000, 0b00000011, // ##     #          ##                                        #    ##           ##
	0b11000011, 0b00010000, 0b00010000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001000, 0b00100000, 0b00000011, // ##    ##   #       #                                        #     #           ##
	0b11000110, 0b00011000, 0b00100000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001000, 0b00100000, 0b00000011, // ##   ##    ##     #                                         #     #           ##
	0b11000100, 0b00001000, 0b00100000, 0b00001011, 0b00000000, 0b00000000, 0b00000000, 0b00001011, 0b10100000, 0b00000011, // ##   #      #     #         # ##                            # ### #           ##
	0b11000000, 0b00000100, 0b00000000, 0b00011000, 0b00000000, 0b00000000, 0b00000000, 0b00000110, 0b11011100, 0b00100011, // ##           #             ##                                ## ## ###    #   ##
	0b11000000, 0b00000110, 0b00110111, 0b10110000, 0b00000000, 0b00000000, 0b00000000, 0b00110000, 0b00000101, 0b11100011, // ##           ##   ## #### ##                              ##         # ####   ##
	0b11100000, 0b00000001, 0b11101100, 0b01000000, 0b00000000, 0b00000000, 0b00000000, 0b00110000, 0b00000000, 0b00000111, // ###            #### ##   #                                ##                 ###
	0b01100000, 0b00000000, 0b00100000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001000, 0b00000000, 0b00000110, //  ##               #                                         #                ## 
	0b01110000, 0b00000000, 0b00100000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000110, 0b00000000, 0b00001110, //  ###              #                                          ##             ### 
	0b00111000, 0b00000000, 0b00100000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000010, 0b00000000, 0b00011100, //   ###             #                                           #            ###  
	0b00011110, 0b00000000, 0b00110000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000110, 0b00000000, 0b01111000, //    ####           ##                                         ##          ####   
	0b00001111, 0b10000000, 0b00010000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001100, 0b00000001, 0b11110000, //     #####          #                                        ##         #####    
	0b00000011, 0b11100000, 0b00011000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001000, 0b00000111, 0b11000000, //       #####        ##                                       #        #####      
	0b00000000, 0b11111100, 0b00011000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001000, 0b00111111, 0b00000000, //         ######     ##                                       #     ######        
	0b00000000, 0b00111111, 0b10110000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001001, 0b11111100, 0b00000000, //           ####### ##                                        #  #######          
	0b00000000, 0b00000111, 0b11111100, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00111111, 0b11100000, 0b00000000, //              #########                                    #########             
	0b00000000, 0b00000000, 0b11111111, 0b11111000, 0b00000000, 0b00000000, 0b00011111, 0b11111111, 0b00000000, 0b00000000, //                 #############                      #############                
	0b00000000, 0b00000000, 0b00000111, 0b11111111, 0b10000000, 0b00000001, 0b11111111, 0b11100000, 0b00000000, 0b00000000, //                      ############              ############                     
};

unsigned char levelOneDoorBitmaps[] =
{
	0b00001111, 0b11000000, //     ######    
	0b00010011, 0b00100000, //    #  ##  #   
	0b00100011, 0b00010000, //   #   ##   #  
	0b01000011, 0b00001000, //  #    ##    # 
	0b01000011, 0b00001000, //  #    ##    # 
	0b10000011, 0b00000100, // #     ##     #
	0b10000011, 0b00000100, // #     ##     #
	0b10011011, 0b01100100, // #  ## ## ##  #
	0b10011011, 0b01100100, // #  ## ## ##  #
	0b10000011, 0b00000100, // #     ##     #
	0b10000011, 0b00000100, // #     ##     #
	0b10000011, 0b00000100, // #     ##     #
	0b10000011, 0b00000100, // #     ##     #
};

unsigned char wall_l_rBitmaps[] =
{
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
	0b11111111, 0b11111111, // ##########################################
};


unsigned char wall_t_bBitmaps[] =
{
	0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111100, // ##############################################################################################################################
	0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111100, // ##############################################################################################################################

};



#endif